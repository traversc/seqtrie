% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise.R
\name{dist_matrix}
\alias{dist_matrix}
\title{Compute distances between all combinations of two sets of sequences}
\usage{
dist_matrix(
  query,
  target,
  mode,
  cost_matrix = NULL,
  gap_cost = NULL,
  gap_open_cost = NULL,
  nthreads = 1,
  show_progress = FALSE
)
}
\arguments{
\item{query}{`r rdoc("query")`}

\item{target}{`r rdoc("target")`}

\item{mode}{`r rdoc("mode")`}

\item{cost_matrix}{`r rdoc("cost_matrix")`}

\item{gap_cost}{`r rdoc("gap_cost")`}

\item{nthreads}{`r rdoc("nthreads")`}

\item{show_progress}{`r rdoc("show_progress")`}
}
\value{
The output is a distance matrix between all query (rows) and target (columns) sequences.
For anchored searches, the output also includes attributes "query_size" and "target_size" which are matrices containing the lengths of the query and target sequences that are aligned.
}
\description{
Compute distances between all combinations of query and target sequences
}
\details{
This function calculates all combinations of pairwise distances based on Hamming, Levenshtein or Anchored algorithms. The output is a NxM matrix where N = length(query) and M = length(target).  
`r rdoc("details")`
}
\examples{
dist_matrix(c("ACGT", "AAAA"), c("ACG", "ACGT"), mode = "global")
}
