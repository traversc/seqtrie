% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic_prog_functions.R
\name{dist_pairwise}
\alias{dist_pairwise}
\title{Pairwise distance between two sets of sequences}
\usage{
dist_pairwise(
  query,
  target,
  mode,
  cost_matrix = NULL,
  gap_cost = NULL,
  nthreads = 1,
  show_progress = FALSE
)
}
\arguments{
\item{query}{A character vector of query sequences}

\item{target}{A character vector of target sequences}

\item{mode}{The distance metric to use. One of hamming (hm), levenshtein (lv) or anchored (an)}

\item{cost_matrix}{A custom cost matrix for use with the "levenshtein" or "anchored" distance metrics}

\item{gap_cost}{The cost of a gap for use with the "levenshtein" or "anchored" distance metrics}

\item{nthreads}{The number of threads to use for parallel computation}

\item{show_progress}{Whether to show a progress bar}
}
\value{
The output of this function is a data.frame of all matches with columns "query" (the sequences input to the search function), 
"target" (the sequences inserted into the tree) and "distance" the absolute distance between query and target sequences. 
For anchored searches, the output also includes "query_size" and "target_size" which are the lengths of the query and target sequences that are aligned.
}
\description{
Compute the pairwise distance between two sets of sequences
}
\details{
The "hamming" distance is the number of positions at which the corresponding symbols are different.
}
\examples{
dist_pairwise(c("ACGT", "AAAA"), c("ACG", "ACGT"), mode = "levenshtein")
}
